Jan-06-2023 14:16:32 [error] {"message":"text error"}
Jan-06-2023 14:17:41 [error] {"message":"text error"}
Jan-06-2023 14:27:35 [error] {"message":"text error"}
Jan-06-2023 17:24:18 [error] {"message":"text error"}
Jan-06-2023 17:27:09 [error] {"message":"text error"}
Jan-06-2023 17:28:46 [error] {"message":"text error"}
Jan-06-2023 17:53:29 [error] {"message":"text error"}
Jan-07-2023 11:19:12 [error] {"message":"text error"}
Jan-07-2023 11:38:16 [error] {"message":"text error"}
Jan-07-2023 11:39:06 [error] {"message":"text error"}
Jan-07-2023 11:48:57 [error] {"message":"text error"}
Jan-07-2023 11:50:29 [error] {"message":"text error"}
Jan-07-2023 11:51:51 [error] {"message":"text error"}
Jan-07-2023 11:53:52 [error] {"message":"text error"}
Jan-07-2023 11:58:25 [error] {"message":"text error"}
Jan-07-2023 12:00:41 [error] {"message":"text error"}
Jan-07-2023 21:23:54 [error] {"message":"text error"}
Jan-07-2023 21:24:42 [error] {"message":"text error"}
Jan-07-2023 21:26:17 [error] {"message":"text error"}
Jan-07-2023 21:29:08 [error] {"message":"text error"}
Jan-07-2023 21:47:11 [error] {"message":"text error"}
Jan-07-2023 21:49:12 [error] {"message":"text error"}
Jan-07-2023 21:50:48 [error] {"message":"text error"}
Jan-08-2023 19:36:44 [error] {"message":"text error"}
Jan-08-2023 19:46:28 [error] {"message":"text error"}
Jan-08-2023 20:54:34 [error] {"message":"text error"}
Jan-08-2023 20:58:15 [error] {"message":"text error"}
Jan-08-2023 20:58:58 [error] {"message":"text error"}
Jan-08-2023 21:00:02 [error] {"message":"text error"}
Jan-08-2023 21:06:15 [error] {"message":"text error"}
Jan-08-2023 21:07:38 [error] {"message":"text error"}
Jan-08-2023 21:08:26 [error] {"message":"text error"}
Jan-08-2023 21:09:44 [error] {"message":"text error"}
Jan-08-2023 21:20:18 [error] {"message":"text error"}
Jan-08-2023 21:21:22 [error] {"message":"text error"}
Jan-08-2023 21:23:25 [error] {"message":"text error"}
Jan-08-2023 21:25:45 [error] {"message":"text error"}
Jan-08-2023 21:38:53 [error] {"message":"text error"}
Jan-08-2023 21:41:55 [error] {"message":"text error"}
Jan-08-2023 21:44:01 [error] {"message":"text error"}
Jan-08-2023 21:59:39 [error] {"message":"text error"}
Jan-08-2023 22:00:43 [error] {"message":"text error"}
Jan-08-2023 22:01:15 [error] {"message":"text error"}
Jan-08-2023 22:01:44 [error] {"message":"text error"}
Jan-08-2023 22:02:21 [error] {"message":"text error"}
Jan-08-2023 22:02:40 [error] {"message":"text error"}
Jan-08-2023 22:04:25 [error] {"message":"text error"}
Jan-08-2023 22:24:30 [error] {"message":"text error"}
Jan-08-2023 22:33:41 [error] {"message":"text error"}
Jan-08-2023 22:36:29 [error] {"message":"text error"}
Jan-08-2023 22:37:57 [error] {"message":"text error"}
Jan-08-2023 22:40:23 [error] {"message":"text error"}
Jan-08-2023 22:55:33 [error] {"message":"text error"}
Jan-08-2023 22:56:01 [error] {"message":"text error"}
Jan-08-2023 22:57:31 [error] {"message":"text error"}
Jan-08-2023 22:58:58 [error] {"message":"text error"}
Jan-08-2023 23:01:27 [error] {"message":"text error"}
Jan-08-2023 23:04:21 [error] {"message":"text error"}
Jan-08-2023 23:06:28 [error] {"message":"text error"}
Jan-08-2023 23:09:11 [error] {"message":"text error"}
Jan-08-2023 23:13:01 [error] {"message":"text error"}
Jan-08-2023 23:14:07 [error] {"message":"text error"}
Jan-08-2023 23:18:24 [error] {"message":"text error"}
Jan-08-2023 23:18:55 [error] {"message":"text error"}
Jan-09-2023 00:19:05 [error] {"message":"text error"}
Jan-09-2023 00:23:48 [error] {"message":"text error"}
Jan-09-2023 00:33:08 [error] {"message":"text error"}
Jan-09-2023 00:44:55 [error] {"message":"text error"}
Jan-09-2023 00:46:21 [error] {"message":"text error"}
Jan-09-2023 00:47:22 [error] {"message":"text error"}
Jan-09-2023 00:48:15 [error] {"message":"text error"}
Jan-09-2023 00:49:34 [error] {"message":"text error"}
Jan-09-2023 00:50:23 [error] {"message":"text error"}
Jan-09-2023 00:58:03 [error] {"message":"text error"}
Jan-09-2023 01:01:56 [error] {"message":"text error"}
Jan-09-2023 01:04:06 [error] {"message":"text error"}
Jan-09-2023 01:07:49 [error] {"message":"text error"}
Jan-09-2023 01:08:36 [error] {"message":"text error"}
Jan-09-2023 01:51:31 [error] {"message":"text error"}
Jan-09-2023 11:20:28 [error] {"message":"text error"}
Jan-09-2023 17:26:10 [error] {"message":"text error"}
Jan-09-2023 17:29:19 [error] {"message":"text error"}
Jan-09-2023 17:34:45 [error] {"message":"text error"}
Jan-09-2023 17:36:29 [error] {"message":"text error"}
Jan-09-2023 17:40:23 [error] {"message":"text error"}
Jan-09-2023 17:41:53 [error] {"message":"text error"}
Jan-09-2023 17:44:56 [error] {"message":"text error"}
Jan-09-2023 17:50:06 [error] {"message":"text error"}
Jan-09-2023 17:52:01 [error] {"message":"text error"}
Jan-09-2023 17:53:53 [error] {"message":"text error"}
Jan-09-2023 17:54:42 [error] {"message":"text error"}
Jan-09-2023 17:56:15 [error] {"message":"text error"}
Jan-09-2023 17:56:43 [error] {"message":"text error"}
Jan-09-2023 17:57:22 [error] {"message":"text error"}
Jan-09-2023 18:01:13 [error] {"message":"text error"}
Jan-09-2023 18:02:26 [error] {"message":"text error"}
Jan-09-2023 18:04:18 [error] {"message":"text error"}
Jan-09-2023 18:05:28 [error] {"message":"text error"}
Jan-09-2023 18:06:06 [error] {"message":"text error"}
Jan-09-2023 18:09:22 [error] {"message":"text error"}
Jan-09-2023 18:11:22 [error] {"message":"text error"}
Jan-09-2023 18:11:56 [error] {"message":"text error"}
Jan-09-2023 18:13:31 [error] {"message":"text error"}
Jan-09-2023 18:16:21 [error] {"message":"text error"}
Jan-09-2023 18:16:23 [error] {"message":"text error"}
Jan-09-2023 18:16:34 [error] {"message":"text error"}
Jan-10-2023 09:59:51 [error] {"message":"text error"}
Jan-10-2023 10:07:27 [error] {"message":"text error"}
Jan-10-2023 10:13:38 [error] {"message":"text error"}
Jan-10-2023 10:15:10 [error] {"message":"text error"}
Jan-10-2023 10:16:43 [error] {"message":"text error"}
Jan-10-2023 10:19:05 [error] {"message":"text error"}
Jan-10-2023 10:22:31 [error] {"message":"text error"}
Jan-10-2023 10:24:30 [error] {"message":"text error"}
Jan-10-2023 10:25:56 [error] {"message":"text error"}
Jan-10-2023 10:28:08 [error] {"message":"text error"}
Jan-10-2023 10:28:54 [error] {"message":"text error"}
Jan-10-2023 10:29:48 [error] {"message":"text error"}
Jan-10-2023 10:30:19 [error] {"message":"text error"}
Jan-10-2023 10:32:13 [error] {"message":"text error"}
Jan-10-2023 10:44:00 [error] {"message":"text error"}
Jan-10-2023 10:51:51 [error] {"message":"text error"}
Jan-10-2023 10:54:17 [error] {"message":"text error"}
Jan-10-2023 11:00:59 [error] {"message":"text error"}
Jan-10-2023 11:02:32 [error] {"message":"text error"}
Jan-10-2023 11:12:06 [error] {"message":"text error"}
Jan-10-2023 11:14:41 [error] {"message":"text error"}
Jan-10-2023 11:19:00 [error] {"message":"text error"}
Jan-10-2023 11:20:05 [error] {"message":"text error"}
Jan-10-2023 11:20:28 [error] {"message":"text error"}
Jan-10-2023 11:21:53 [error] {"message":"text error"}
Jan-10-2023 11:29:11 [error] {"message":"text error"}
Jan-10-2023 11:32:02 [error] {"message":"text error"}
Jan-10-2023 11:34:30 [error] {"message":"text error"}
Jan-10-2023 11:37:57 [error] {"message":"text error"}
Jan-06-2023 15:47:39 [error] {"message":"text error"}
Jan-09-2023 14:59:07 [error] {"message":"text error"}
Jan-13-2023 20:42:09 [error] {"message":"400 - Unexpected token } in JSON at position 14"}
Jan-13-2023 20:42:09 [error] {"message":"400 - Unexpected token } in JSON at position 14"}
Jan-16-2023 15:07:12 [error] {"message":"400 - Unexpected token \n in JSON at position 33"}
Jan-16-2023 15:07:12 [error] {"message":"400 - Unexpected token \n in JSON at position 33"}
Jan-17-2023 15:50:44 [error] Error: {reference: validationMiddleware, message: name is required, errorCode: 412, errors: [], error: name is required} 
Jan-17-2023 15:50:57 [error] Error: {reference: validationMiddleware, message: password is required, errorCode: 412, errors: [], error: password is required} 
Jan-17-2023 15:51:10 [error] Error: {reference: changePassword, message: Current Password Incorrect, errorCode: 401, errors: [], error: Current Password Incorrect} 
Jan-18-2023 10:02:29 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: AppError is not a constructor} 
Jan-18-2023 10:03:03 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:16:45 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: sortedProducts is not defined} 
Jan-18-2023 10:18:21 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:19:49 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 10:24:28 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 10:25:30 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:26:40 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:27:28 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:28:38 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:32:18 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:33:38 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:34:43 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:35:40 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:36:19 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:36:34 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:41:35 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:42:05 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:42:59 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:56:37 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:57:08 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:57:50 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 10:58:04 [error] Error: {reference: token is missing, message: 403, errorCode: 500, errors: [], error: 403} 
Jan-18-2023 10:59:15 [error] Error: {reference: token is missing, message: 403, errorCode: 500, errors: [], error: 403} 
Jan-18-2023 10:59:21 [error] Error: {reference: token invalid, message: 401, errorCode: 500, errors: [], error: 401} 
Jan-18-2023 11:03:58 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:04:53 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:07:29 [error] Error: {reference: signup, message: Seller already exists, errorCode: 409, errors: [], error: Seller already exists} 
Jan-18-2023 11:07:37 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:08:38 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:09:53 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:13:09 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:15:22 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:15:50 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:20:17 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:20:48 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 11:21:24 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 11:42:25 [error] Error: {reference: not found, message: 404, errorCode: 500, errors: [], error: 404} 
Jan-18-2023 11:48:59 [error] Error: {reference: signup, message: Seller already exists, errorCode: 409, errors: [], error: Seller already exists} 
Jan-18-2023 11:49:09 [error] Error: {reference: validationMiddleware, message: email is required, errorCode: 412, errors: [], error: email is required} 
Jan-18-2023 11:50:55 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: reference is not defined} 
Jan-18-2023 11:52:10 [error] Error: {reference: getAllProducts, message: not found, errorCode: 404, errors: [], error: not found} 
Jan-18-2023 11:54:48 [error] Error: {reference: update, message: Provide valid ProductId, errorCode: 400, errors: [], error: Provide valid ProductId} 
Jan-18-2023 11:56:02 [error] Error: {reference: Product already Deleted, message: 400, errorCode: 500, errors: [], error: 400} 
Jan-18-2023 11:56:09 [error] Error: {reference: update, message: No products with this Id or might be deleted, errorCode: 404, errors: [], error: No products with this Id or might be deleted} 
Jan-18-2023 11:56:47 [error] Error: {reference: update, message: No products with this Id or might be deleted, errorCode: 404, errors: [], error: No products with this Id or might be deleted} 
Jan-18-2023 11:56:52 [error] Error: {reference: delete, message: Product already Deleted, errorCode: 400, errors: [], error: Product already Deleted} 
Jan-18-2023 11:57:06 [error] Error: {reference: delete, message: Product already Deleted, errorCode: 400, errors: [], error: Product already Deleted} 
Jan-18-2023 11:57:46 [error] Error: {reference: delete, message: Product already Deleted, errorCode: 400, errors: [], error: Product already Deleted} 
Jan-18-2023 12:12:19 [error] Error: {reference: validationMiddleware, message: productImage is required, errorCode: 412, errors: [], error: productImage is required} 
Jan-18-2023 12:13:30 [error] Error: {reference: validationMiddleware, message: productImage is required, errorCode: 412, errors: [], error: productImage is required} 
Jan-18-2023 12:16:25 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Unexpected field} 
Jan-18-2023 12:19:45 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Unexpected field} 
Jan-18-2023 12:22:11 [error] Error: {reference: validationMiddleware, message: productImage is required, errorCode: 412, errors: [], error: productImage is required} 
Jan-18-2023 12:30:07 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: r is not defined} 
Jan-18-2023 12:33:35 [error] Error: {reference: validationMiddleware, message: description is required, errorCode: 412, errors: [], error: description is required} 
Jan-18-2023 13:09:24 [error] Error: {reference: validationMiddleware, message: email must be a valid email, errorCode: 412, errors: [], error: email must be a valid email} 
Jan-18-2023 13:09:35 [error] Error: {reference: validationMiddleware, message: password with value Kh77 fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/, errorCode: 412, errors: [], error: password with value Kh77 fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/} 
Jan-18-2023 13:09:57 [error] Error: {reference: validationMiddleware, message: name length must be at least 2 characters long, errorCode: 412, errors: [], error: name length must be at least 2 characters long} 
Jan-18-2023 13:10:06 [error] Error: {reference: validationMiddleware, message: password with value Khus4tt77 fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/, errorCode: 412, errors: [], error: password with value Khus4tt77 fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/} 
Jan-18-2023 15:23:16 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 16:11:01 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 16:11:14 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'findOne')} 
Jan-18-2023 16:11:43 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'findOne')} 
Jan-18-2023 16:12:28 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'findOne')} 
Jan-18-2023 16:13:30 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 16:13:36 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'create')} 
Jan-18-2023 16:19:12 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 16:19:17 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 16:19:21 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: {"otp":{"name":"ValidatorError","message":"Path `otp` is required.","properties":{"message":"Path `otp` is required.","type":"required","path":"otp"},"kind":"required","path":"otp"}}, error: otpSeller validation failed: otp: Path `otp` is required.} 
Jan-18-2023 16:19:30 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 16:19:32 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 16:19:32 [error] Error: {reference: signin, message: Seller not found, errorCode: 404, errors: [], error: Seller not found} 
Jan-18-2023 16:19:52 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 16:19:56 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 16:19:57 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 16:56:53 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 16:56:58 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 16:57:03 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 16:58:21 [error] Error: {reference: POST /seller/signup, message: Server Error!, errorCode: 500, errors: [], error: sellerSchema.findOne is not a function} 
Jan-18-2023 17:03:11 [error] Error: {reference: signup, message: Seller already exists, errorCode: 409, errors: [], error: Seller already exists} 
Jan-18-2023 17:03:28 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:03:37 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:03:53 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:04:44 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:06:31 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:06:56 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:07:20 [error] Error: {reference: authentic, message: token is missing, errorCode: 403, errors: [], error: token is missing} 
Jan-18-2023 17:07:39 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:08:34 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:09:06 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:11:41 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:21:28 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:23:59 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:25:05 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:26:43 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:30:57 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'email')} 
Jan-18-2023 17:32:04 [error] Error: {reference: authentic, message: token invalid, errorCode: 401, errors: [], error: token invalid} 
Jan-18-2023 17:36:50 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 17:37:49 [error] Error: {reference: POST /product/create, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of null (reading '_id')} 
Jan-18-2023 17:55:09 [error] Error: {reference: update, message: No products with this Id or might be deleted, errorCode: 404, errors: [], error: No products with this Id or might be deleted} 
Jan-18-2023 17:57:51 [error] Error: {reference: delete, message: Product already Deleted, errorCode: 400, errors: [], error: Product already Deleted} 
Jan-18-2023 17:57:56 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct is not defined} 
Jan-18-2023 17:58:03 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct is not defined} 
Jan-18-2023 17:59:21 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct(...).sort is not a function} 
Jan-18-2023 17:59:23 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct(...).sort is not a function} 
Jan-18-2023 18:00:01 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct(...).sort is not a function} 
Jan-18-2023 18:00:05 [error] Error: {reference: GET /product/getAllProduct, message: Server Error!, errorCode: 500, errors: [], error: allProduct(...).sort is not a function} 
Jan-19-2023 11:19:58 [error] Error: {reference: validationMiddleware, message: email is required, errorCode: 412, errors: [], error: email is required} 
Jan-19-2023 11:20:11 [error] Error: {reference: validationMiddleware, message: name is not allowed to be empty, errorCode: 412, errors: [], error: name is not allowed to be empty} 
Jan-19-2023 11:34:32 [error] Error: {reference: validationMiddleware, message: name is required, errorCode: 412, errors: [], error: name is required} 
Jan-19-2023 11:52:03 [error] Error: {reference: validationMiddleware, message: name is not allowed to be empty, errorCode: 412, errors: [], error: name is not allowed to be empty} 
Jan-19-2023 11:52:43 [error] Error: {reference: validationMiddleware, message: name is not allowed to be empty, errorCode: 412, errors: [], error: name is not allowed to be empty} 
Jan-19-2023 11:54:06 [error] Error: {reference: validationMiddleware, message: name is not allowed to be empty, errorCode: 412, errors: [], error: name is not allowed to be empty} 
Jan-19-2023 12:32:26 [error] Error: {reference: validationMiddleware, message: password with value Khufrgvr fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/, errorCode: 412, errors: [], error: password with value Khufrgvr fails to match the required pattern: /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/} 
Jan-19-2023 12:32:46 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'sendgrid')} 
Jan-19-2023 12:32:55 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'sendgrid')} 
Jan-19-2023 12:33:20 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'sendgrid')} 
Jan-19-2023 12:36:40 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'sendgrid')} 
Jan-19-2023 12:42:58 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: File too large} 
Jan-19-2023 13:02:13 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: File too large} 
Jan-19-2023 15:05:26 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'tokenExpirationTime')} 
Jan-19-2023 15:05:51 [error] Error: {reference: signup, message: Seller already exists, errorCode: 409, errors: [], error: Seller already exists} 
Jan-19-2023 15:05:55 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot read properties of undefined (reading 'tokenExpirationTime')} 
Jan-19-2023 15:08:29 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: _id is not defined} 
Jan-19-2023 15:08:46 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: id is not defined} 
Jan-19-2023 15:09:13 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: _id is not defined} 
Jan-19-2023 15:10:12 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: Cannot access 'seller' before initialization} 
Jan-19-2023 15:14:59 [error] Error: {reference: POST /seller/signin, message: Server Error!, errorCode: 500, errors: [], error: _id is not defined} 
Jan-19-2023 15:41:22 [error] Error: {reference: Anonymous, message: Server Error!, errorCode: 500, errors: [], error: Unexpected field} 
Jan-19-2023 15:45:02 [error] Error: {reference: validationMiddleware, message: totalQuantity must be a string, errorCode: 412, errors: [], error: totalQuantity must be a string} 
Jan-19-2023 15:45:49 [error] Error: {reference: validationMiddleware, message: productPrice is required, errorCode: 412, errors: [], error: productPrice is required} 
Jan-19-2023 15:46:08 [error] Error: {reference: validationMiddleware, message: location is not allowed, errorCode: 412, errors: [], error: location is not allowed} 
Jan-19-2023 16:40:10 [error] Error: {reference: validationMiddleware, message: name is not allowed to be empty, errorCode: 412, errors: [], error: name is not allowed to be empty} 
Jan-19-2023 18:02:10 [error] Error: {reference: signup, message: Seller already exists, errorCode: 409, errors: [], error: Seller already exists} 
